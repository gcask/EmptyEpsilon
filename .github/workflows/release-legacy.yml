---
name: Legacy platforms
on:
  push:
    branches:
      - EE-*.*.*-hotfixes
    tags:
      - EE-*.*.*.*
    
jobs:
  ubuntu-18_04:
    strategy:
      matrix:
        arch: [amd64, i386]
    name: Package Ubuntu 18.04 (${{ matrix.arch }})
    runs-on: ubuntu-18.04
    steps:
      - name: Fetch version
        shell: bash
        run: |
          VERSION=${GITHUB_REF#*EE-}
          echo "arch_flags=" >> $GITHUB_ENV
          echo "ee_version=$VERSION" >> $GITHUB_ENV
          VERSION=${VERSION%-hotfixes}.${{ github.run_number }}
          cat >> $GITHUB_ENV <<EOF
          version_major=$(echo $VERSION | cut -d. -f1)
          version_minor=$(echo $VERSION | cut -d. -f2)
          version_patch=$(echo $VERSION | cut -d. -f3)
          version_tweak=$(echo $VERSION | cut -d. -f4)
          EOF
      - name: Add i386
        if: matrix.arch == 'i386'
        run: |
          sudo dpkg --add-architecture i386
          
      - name: Setup
        run: |
          sudo sed -Ei 's/^# deb-src /deb-src /' /etc/apt/sources.list
          sudo apt-get update -qq
          sudo apt-get install ninja-build wget cmake unzip
      - name: Compiler
        if: matrix.arch == 'i386'
        run: |
          sudo apt-get install gcc-multilib g++-multilib gcc-8-multilib g++-8-multilib
          echo "arch_flags=-DCMAKE_CXX_FLAGS=-m32 -DCMAKE_C_FLAGS=-m32" >> $GITHUB_ENV
      - name: Compiler
        if: matrix.arch == 'amd64'
        run: |
          sudo apt-get install gcc-8 g++-8
          echo "cmake_platform_args=-DWITH_DISCORD:BOOL=ON" >> $GITHUB_ENV
          
      - name: SFML 2.5
        run: >
          sudo apt-get install
          libflac-dev:${{ matrix.arch }} libfreetype6-dev:${{ matrix.arch }} libgl1-mesa-dev:${{ matrix.arch }}
          libjpeg-dev:${{ matrix.arch }} libopenal-dev:${{ matrix.arch }} libudev-dev:${{ matrix.arch }}
          libvorbis-dev:${{ matrix.arch }} libx11-dev:${{ matrix.arch }} libxrandr-dev:${{ matrix.arch }}
          
          wget http://www.sfml-dev.org/files/SFML-2.5.1-sources.zip
          
          unzip SFML-2.5.1-sources.zip
          
          cd SFML-2.5.1
          
          cmake ${{ env.arch_flags }} .
          
          make -j
          
          sudo make install
      - name: Setup
        run: |
          cat >> $GITHUB_ENV <<EOF
          cmake_generator=Ninja
          cpack_generator="DEB"
          cmake_platform_args=
          EOF
      - name: SeriousProton Checkout
        uses: actions/checkout@v2
        with:
          repository: gcask/SeriousProton
          path: SeriousProton
          ref: EE-${{ env.version_major }}.${{ env.version_minor }}.${{ env.version_patch }}-hotfixes
      - name: EmptyEpsilon Checkout
        uses: actions/checkout@v2
        with:
          path: EmptyEpsilon
      - name: Create Build Environment
        run: cmake -E make_directory ${{github.workspace}}/build
      - name: Configure CMake
        working-directory: ${{github.workspace}}/build
        run: >
          CC=gcc-8 CXX=g++-8 cmake ../EmptyEpsilon
          -G ${{ env.cmake_generator }} ${{ env.arch_flags }}
          -DCMAKE_INSTALL_PREFIX:PATH=/usr/local
          -DCMAKE_BUILD_TYPE:STRING=RelWithDebInfo
          -DSERIOUS_PROTON_DIR:PATH=../SeriousProton
          -DCPACK_GENERATOR=${{ env.cpack_generator }}
          -DCPACK_PACKAGE_VERSION_MAJOR:STRING=${{ env.version_major }}
          -DCPACK_PACKAGE_VERSION_MINOR:STRING=${{ env.version_minor }}
          -DCPACK_PACKAGE_VERSION_PATCH:STRING=${{ env.version_patch }}
          -DCPACK_PACKAGE_VERSION_TWEAK:STRING=${{ env.version_tweak }}
          ${{ env.cmake_platform_args }}
      - name: Build
        working-directory: ${{github.workspace}}/build
        run: cmake --build . --config RelWithDebInfo --parallel --target EmptyEpsilon --verbose
      - name: Package
        working-directory: ${{github.workspace}}/build
        run: |
          cpack -C RelWithDebInfo --config CPackConfig.cmake --verbose
          mv EmptyEpsilon-*-*.deb EmptyEpsilon-${{ env.version_major }}.${{ env.version_minor }}.${{ env.version_patch }}-ubuntu_18_04_${{ matrix.arch }}.deb
          mv EmptyEpsilon-*-*.deb.sha256 EmptyEpsilon-${{ env.version_major }}.${{ env.version_minor }}.${{ env.version_patch }}-ubuntu_18_04_${{ matrix.arch }}.deb.sha256
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: EmptyEpsilon-${{ env.ee_version }}
          path: |
            build/EmptyEpsilon-*-*.* 

  upload:
      runs-on: ubuntu-latest
      needs: ubuntu-18_04
      steps:
        - name: Get Packages
          uses: actions/download-artifact@v2
        - name: List
          run: ls -R
        - name: Update release
          if: startsWith(github.ref, 'refs/tags/')
          uses: softprops/action-gh-release@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            files: EmptyEpsilon-*/*
            draft: true
            prerelease: true
